comp1 - Create Logic Class                                                          x
    (1) Implement LogicGate, BinaryGate, and UnaryGate classes and fill in methods  x
    (2) Write unit tests for these methods                                          x
    (3) Write documentation for these clases                                        x
    (4) Implement And, Or, and Not classes along with unit tests                    x

comp2 - Create Connection Class                                                     x
    (1) Create Connection subdirectory and class                                    x
    (2) Fill in methods                                                             x
    (3) Make changes to LogicGate subdirectory                                      x
    (4) Write / Update unit tests                                                   x
    (5) Write documentation                                                         x

comp3 - Create Bit/BitStream classes
    (1) Implement Bit class                                                         x
    (2) Refactor code to use Bit class instead of int DEFER THIS TO comp5
    (3) Implement BitString class                                                   x
    (4) Update unit tests                                                           x
    (5) Write documentation                                                         x

comp4 - Create hybrid gate classes: xor, nor, nand, nxor, ...                       x
    (1) Nest LogicGate and Connection subdirectories into LogicCircuit              x
    (2) Create/implement each of the four compound logic gates                      x
    (3) Add/update unit tests                                                       x
    (4) Write documentation DEFER THIS TO comp5                                     x

comp5 - Refactor LogicGate class
    (1) Delete BinaryGate/UnaryGate modules                                         x
    (2) Make LogicGate an abstract base class interface                             x
    (3) Make other gate classes inherit from LogicGate interface                    x
    (4) Re-refactor LogicGate class...                                              x
    (4.1) Remove all classes and implement new ILogicGate interface                 x
    (4.2) Implement new LogicGate class per discussion                              x
    (4.3) Implement IConnection interface                                           x
    (4.4) Update Connection class                                                   x
    (5) Make gate classes and connections use Bits DEFER THIS TO comp7
    (6) Update unt tests                                                            x
    (7) Write/update documentation                                                  x

comp6 - Refactor compound gates                                                     x
    (2) Create compound gate factory along with gate creation function              x
    (3) Remove old xor, xnor, nand, nor classes                                     x
    (4) Create new CompoundGate class that follows ILogicGate interface             x
    (5) Update unit tests                                                           x
    (6) Update docs                                                                 x

comp7 - Refactor to make use of Bits
    (1) Make gate classes and connections use Bits
    (2) Update unit tests
    (3) Update docs

comp8 - Create Branch class in Connection
    (1) Create Branch class that follows IConnection interface
    (2) Implement set_mapping and feed methods
    (3) Add unit tests
    (4) Update documentation

comp9 - Create Switch class in Connection
comp10 - Create Loop class in Connection
comp11 - Implement Logger class
comp12 - Implement Half Adder